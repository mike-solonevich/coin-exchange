{"version":3,"sources":["logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinHeader","styled","header","logoSpin","keyframes","Img","img","H1","h1","Header","src","this","props","logo","alt","Component","Section","section","Button","button","AccountBalance","buttonText","showBalance","onClick","event","preventDefault","toggleBalanceVisibility","amount","Td","td","Coin","name","ticker","price","toFixed","balance","action","method","handleRefreshCoinPrice","coinID","Table","table","CoinList","coinData","map","coin","AppWrapper","div","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIDs","data","slice","id","pricePromises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","newPrice","newCoinData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.675ddb69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components'\n\nconst CoinHeader = styled.header`\n  background-color: #282c34;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  color: white;\n`;\nconst logoSpin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst Img = styled.img`\n  height: 8rem;\n  pointer-events: none;\n  animation: ${logoSpin} infinite 20s linear;\n`;\nconst H1 = styled.h1`\n  font-size: 4rem;\n`;\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <CoinHeader>\n          <Img src={this.props.logo} alt=\"logo\" />\n          <H1>\n            Coin Exchange\n          </H1>\n        </CoinHeader>\n      </header>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n  margin: 40px auto 0;\n  color: #fff;\n  font-size: 1.6rem;\n  text-decoration: underline;\n`;\nconst Button = styled.button`\n  display: block;\n  margin: 0 auto 20px auto;\n`;\n\nexport default function AccountBalance(props) {\n  const handleClick = (event) => {\n    event.preventDefault();\n    props.toggleBalanceVisibility();\n  }\n\n  const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n\n  return (\n    <Section>\n      <Button onClick={handleClick}>{buttonText}</Button>\n      {props.showBalance &&\n        <>Your USD balance: ${props.amount}</>\n      }\n    </Section>\n  );\n}\n\nAccountBalance.propTypes = {\n  showBalance: PropTypes.bool.isRequired,\n  amount: PropTypes.number.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n  border: 1px solid #cccccc;\n  width: 25vh;\n`;\n\nexport default function Coin(props) { \n  const handleClick = (event) => {\n    event.preventDefault();\n    props.handleRefreshCoinPrice(props.coinID);\n  }\n\n  return (\n    <tr>\n      <Td>{props.name}</Td>\n      <Td>{props.ticker}</Td>\n      <Td>${props.price.toFixed(4)}</Td>\n      {props.showBalance &&\n        <Td>{props.balance}</Td>\n      }\n      <Td>\n        <form action=\"\" method=\"POST\">\n          <button onClick={handleClick}>Refresh</button>\n        </form>\n      </Td>\n    </tr>\n  );\n}\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  coinID: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\nconst Table = styled.table`\n  margin: 50px auto;\n  display: inline-block;\n  font-size: 1.4rem;\n`;\n\nexport default function CoinList(props) {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Ticker</th>\n          <th>Price</th>\n          {props.showBalance &&\n            <th>Balance</th>\n          }\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.coinData.map(coin =>\n          <Coin key={coin.coinID}\n                coinID={coin.coinID}\n                name={coin.name} \n                ticker={coin.ticker} \n                balance={coin.balance}\n                price={coin.price} \n                handleRefreshCoinPrice={props.handleRefreshCoinPrice} \n                showBalance={props.showBalance} />\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport Header from './components/ExchangeHeader/ExchangeHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport CoinList from './components/CoinList/CoinList';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst AppWrapper = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 5;\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIDs = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const pricePromises = coinIDs.map(id => axios.get(`https://api.coinpaprika.com/v1/tickers/${id}`));\n    const coinPriceData = await Promise.all(pricePromises);\n    const coinData = coinPriceData.map(function(coin) {\n      return {\n        coinID: coin.data.id,\n        name: coin.data.name,\n        ticker: coin.data.symbol,\n        balance: 0,\n        price: coin.data.quotes.USD.price\n      };\n    });\n    setCoinData(coinData);    \n  }\n\n  useEffect(() => {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const toggleBalanceVisibility = () => {\n    setShowBalance(showBalance => ! showBalance);\n  }\n\n  const handleRefreshCoinPrice = async (coinID) => {\n    const newPrice = await axios.get(`https://api.coinpaprika.com/v1/tickers/${coinID}`);\n    const newCoinData = coinData.map(coin => {\n      if (coin.coinID === coinID) {\n        coin.price = newPrice.data.quotes.USD.price;\n      }\n      return coin;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <AppWrapper>\n      <Header logo={logo} />\n      <AccountBalance amount={balance} showBalance={showBalance} toggleBalanceVisibility={toggleBalanceVisibility} />\n      <CoinList coinData={coinData} handleRefreshCoinPrice={handleRefreshCoinPrice} showBalance={showBalance} />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}