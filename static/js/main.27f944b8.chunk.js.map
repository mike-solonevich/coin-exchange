{"version":3,"sources":["logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinHeader","styled","header","logoSpin","keyframes","Img","img","H1","h1","Header","src","this","props","logo","alt","Component","Balance","div","Section","section","Button","button","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","showBalance","buttonClass","onClick","event","preventDefault","toggleBalanceVisibility","className","addHelicopterMoney","format","amount","Td","td","TdControls","Coin","name","ticker","price","toFixed","balance","action","method","handleActionButtonClick","coinID","Table","table","CoinList","coinData","map","coin","AppWrapper","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIDs","data","slice","id","pricePromises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","handleRefreshCoinPrice","newPrice","newCoinData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27f944b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components'\n\nconst CoinHeader = styled.header`\n  background-color: #282c34;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  color: white;\n`;\nconst logoSpin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst Img = styled.img`\n  height: 8rem;\n  pointer-events: none;\n  animation: ${logoSpin} infinite 20s linear;\n`;\nconst H1 = styled.h1`\n  font-size: 4rem;\n`;\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <CoinHeader>\n          <Img src={this.props.logo} alt=\"logo\" />\n          <H1>\n            Coin Exchange\n          </H1>\n        </CoinHeader>\n      </header>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Balance = styled.div`\n  min-width: 250px;\n  font-size: 2rem;\n  margin: 3vh auto;\n`;\n\nconst Section = styled.section`\n  margin: 40px auto 0;\n  color: #fff;\n  font-size: 1.6rem;\n  text-decoration: underline;\n`;\nconst Button = styled.button`\n  margin: 0 8px;\n`;\n\nconst BalanceToggleButton = styled(Button)`\n  width: 150px;\n`;\n\nvar formatter = Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nexport default function AccountBalance(props) {\n  const handleBrr = (event) => {\n    event.preventDefault();\n    props.addHelicopterMoney();\n  }\n  const handleClick = (event) => {\n    event.preventDefault();\n    props.toggleBalanceVisibility();\n  }\n  const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n  const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\n\n  return (\n    <>\n      <Section>\n        <BalanceToggleButton onClick={handleClick} className={buttonClass}>{buttonText}</BalanceToggleButton>\n        <Button className=\"btn btn-success\" onClick={handleBrr}><i className=\"fas fa-helicopter\"></i></Button>\n      </Section>\n      <Balance>\n        {props.showBalance &&\n          <>Your USD balance: {formatter.format(props.amount)}</>\n        }\n      </Balance>\n    </>\n  );\n}\n\nAccountBalance.propTypes = {\n  showBalance: PropTypes.bool.isRequired,\n  amount: PropTypes.number.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n  border: 1px solid #cccccc;\n  width: 20vh;\n`;\nconst TdControls = styled(Td)`\n  width: 25vw;\n`;\nconst Button = styled.button`\n  font-size: 18px;\n  width: 200px;\n  margin: 3px 5px;\n`;\n\nexport default function Coin(props) { \n  const handleRefresh = (event) => {\n    event.preventDefault();\n    props.handleActionButtonClick(props.coinID, 'refresh');\n  }\n  const handleBuy = (event) => {\n    event.preventDefault();\n    props.handleActionButtonClick(props.coinID, 'buy');\n  }\n  const handleSell = (event) => {\n    event.preventDefault();\n    props.handleActionButtonClick(props.coinID, 'sell');\n  }\n\n  return (\n    <tr>\n      <Td>{props.name}</Td>\n      <Td>{props.ticker}</Td>\n      <Td>${props.price.toFixed(4)}</Td>\n      {props.showBalance &&\n        <Td>{props.balance}</Td>\n      }\n      <TdControls>\n        <form action=\"\" method=\"POST\">\n          <Button onClick={handleRefresh} className=\"btn btn-info\">Refresh</Button>\n          <Button onClick={handleBuy} className=\"btn btn-warning\">Buy</Button>\n          <Button onClick={handleSell} className=\"btn btn-danger\">Sell</Button>\n        </form>\n      </TdControls>\n    </tr>\n  );\n}\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  coinID: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\nconst Table = styled.table`\n  margin: 0 auto;\n  font-size: 1.4rem;\n`;\n\nexport default function CoinList(props) {\n  return (\n    <Table className=\"table table-primary table-borders\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Ticker</th>\n          <th>Price</th>\n          {props.showBalance &&\n            <th>Balance</th>\n          }\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.coinData.map(coin =>\n          <Coin key={coin.coinID}\n                coinID={coin.coinID}\n                name={coin.name} \n                ticker={coin.ticker} \n                balance={coin.balance}\n                price={coin.price}\n                handleActionButtonClick={props.handleActionButtonClick} \n                showBalance={props.showBalance} />\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport Header from './components/ExchangeHeader/ExchangeHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport CoinList from './components/CoinList/CoinList';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst AppWrapper = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 5;\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIDs = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const pricePromises = coinIDs.map(id => axios.get(`https://api.coinpaprika.com/v1/tickers/${id}`));\n    const coinPriceData = await Promise.all(pricePromises);\n    const coinData = coinPriceData.map(function(coin) {\n      return {\n        coinID: coin.data.id,\n        name: coin.data.name,\n        ticker: coin.data.symbol,\n        balance: 0,\n        price: coin.data.quotes.USD.price\n      };\n    });\n    setCoinData(coinData);    \n  }\n\n  useEffect(() => {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const addHelicopterMoney = () => {\n    setBalance(balance + 1200);\n  }\n\n  const toggleBalanceVisibility = () => {\n    setShowBalance(showBalance => ! showBalance);\n  }\n\n  const handleActionButtonClick = (coinID, action) => {\n    if (action === 'refresh') {\n      handleRefreshCoinPrice(coinID);\n    }\n  }\n\n  const handleRefreshCoinPrice = async (coinID) => {\n    const newPrice = await axios.get(`https://api.coinpaprika.com/v1/tickers/${coinID}`);\n    const newCoinData = coinData.map(coin => {\n      if (coin.coinID === coinID) {\n        coin.price = newPrice.data.quotes.USD.price;\n      }\n      return coin;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <AppWrapper>\n      <Header logo={logo} />\n      <AccountBalance amount={balance} addHelicopterMoney={addHelicopterMoney} showBalance={showBalance} toggleBalanceVisibility={toggleBalanceVisibility} />\n      <CoinList coinData={coinData} handleActionButtonClick={handleActionButtonClick} showBalance={showBalance} />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}